<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api</name>
    </assembly>
    <members>
        <member name="M:api.Controllers.ImagesController.#ctor(CloudinaryDotNet.Cloudinary,api.Services.ImageService,api.Services.PostService)">
            Images controller
        </member>
        <member name="M:api.Controllers.ImagesController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
             <summary>
             Uploads image to cloudinary and save it's metadata(urls) to the database
             </summary>
             <returns>Void</returns>
             <remarks>
             The end point accepts "filename" and "folder" query string params
             
             The process:
            
               1. The code checks if the uploaded image already exists in the database(to be implemented)
               2. The uploaded file is resized if larger than 2400px wide
               3. The file is converted to base64 string
               4. The code checks if the query string contains "folder" or "filename" params
               5. If the query string is empty, the file is uploaded to Cloudinary with a random name to the root folder \n
               7. Otherwise it is uploaded to the specified folder with specified filename
               8. A list of URLs with applied transformations(resized) is created
               9. A new CldImage entity is created and saved to the database
            
             </remarks>
             <response code="200">If the image was uploaded</response>
             <response code="415">If the uploaded file content-type is incorrect</response>
        </member>
    </members>
</doc>
